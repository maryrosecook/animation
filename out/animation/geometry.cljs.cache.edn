{:rename-macros {}, :renames {}, :externs {Math {abs {}}}, :use-macros {}, :excludes #{}, :name animation.geometry, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {add-vectors {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/geometry.cljs", :line 3, :column 7, :end-line 3, :end-column 18, :arglists (quote ([{x1 :x, y1 :y} {x2 :x, y2 :y}]))}, :name animation.geometry/add-vectors, :variadic false, :file "src/cljs/animation/geometry.cljs", :end-column 18, :method-params ([p__12443 p__12444]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{x1 :x, y1 :y} {x2 :x, y2 :y}]))}, subtract-vectors {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/geometry.cljs", :line 7, :column 7, :end-line 7, :end-column 23, :arglists (quote ([{x1 :x, y1 :y} {x2 :x, y2 :y}]))}, :name animation.geometry/subtract-vectors, :variadic false, :file "src/cljs/animation/geometry.cljs", :end-column 23, :method-params ([p__12449 p__12450]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{x1 :x, y1 :y} {x2 :x, y2 :y}]))}, point-in-circle? {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/geometry.cljs", :line 11, :column 7, :end-line 11, :end-column 23, :arglists (quote ([{circle-x :x, circle-y :y} circle-radius {point-x :x, point-y :y}]))}, :name animation.geometry/point-in-circle?, :variadic false, :file "src/cljs/animation/geometry.cljs", :end-column 23, :method-params ([p__12455 circle-radius p__12456]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{circle-x :x, circle-y :y} circle-radius {point-x :x, point-y :y}]))}, within {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/geometry.cljs", :line 16, :column 7, :end-line 16, :end-column 13, :arglists (quote ([first-number second-number distance]))}, :name animation.geometry/within, :variadic false, :file "src/cljs/animation/geometry.cljs", :end-column 13, :method-params ([first-number second-number distance]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 3, :fn-var true, :arglists (quote ([first-number second-number distance]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:y :x}, :order [:x :y]}, :doc nil}