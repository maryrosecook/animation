{:rename-macros {}, :renames {}, :externs {Math {PI {}}, window {}, document {}}, :use-macros {}, :excludes #{}, :name animation.core, :imports nil, :requires {input animation.input, set clojure.set, goog.dom goog.dom, dom goog.dom, animation.geometry animation.geometry, clojure.browser.repl clojure.browser.repl, animation.tick animation.tick, clojure.set clojure.set, events goog.events, animation.input animation.input, geometry animation.geometry, repl clojure.browser.repl, goog.events goog.events}, :cljs.spec/speced-vars [], :uses {on-tick animation.tick}, :defs {get-window-size {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 54, :column 7, :end-line 54, :end-column 22, :arglists (quote ([window document]))}, :name animation.core/get-window-size, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 22, :method-params ([window document]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([window document]))}, draw {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 78, :column 7, :end-line 78, :end-column 11, :arglists (quote ([state screen]))}, :name animation.core/draw, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 11, :method-params ([state screen]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state screen]))}, initial-state {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 33, :column 7, :end-line 33, :end-column 20, :arglists (quote ([]))}, :name animation.core/initial-state, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-current-points {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 27, :column 7, :end-line 27, :end-column 25, :arglists (quote ([state points]))}, :name animation.core/set-current-points, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 25, :method-params ([state points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state points]))}, rewind-on-4-key {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 143, :column 7, :end-line 143, :end-column 22, :arglists (quote ([input state]))}, :name animation.core/rewind-on-4-key, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 22, :method-params ([input state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input state]))}, setup-layout {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 251, :column 7, :end-line 251, :end-column 19, :arglists (quote ([window document]))}, :name animation.core/setup-layout, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 19, :method-params ([window document]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 2, :fn-var true, :arglists (quote ([window document]))}, set-mode {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 116, :column 7, :end-line 116, :end-column 15, :arglists (quote ([input state]))}, :name animation.core/set-mode, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 15, :method-params ([input state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input state]))}, current-frame-index {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 20, :column 6, :end-line 20, :end-column 25}, :name animation.core/current-frame-index, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 25, :method-params ([p1__13667#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists nil}, point-color {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 66, :column 7, :end-line 66, :end-column 18, :arglists (quote ([point selected-group]))}, :name animation.core/point-color, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 18, :method-params ([point selected-group]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([point selected-group]))}, toggle-playing {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 247, :column 7, :end-line 247, :end-column 21, :arglists (quote ([state]))}, :name animation.core/toggle-playing, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 247, :end-line 247, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, point-radius {:name animation.core/point-radius, :file "src/cljs/animation/core.cljs", :line 16, :column 1, :end-line 16, :end-column 18, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 16, :column 6, :end-line 16, :end-column 18}, :tag number}, create-point {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 92, :column 7, :end-line 92, :end-column 19, :arglists (quote ([id position group]))}, :name animation.core/create-point, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 19, :method-params ([id position group]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 3, :fn-var true, :arglists (quote ([id position group]))}, draw-mode? {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 18, :column 7, :end-line 18, :end-column 17, :arglists (quote ([state]))}, :name animation.core/draw-mode?, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, move-points {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 126, :column 7, :end-line 126, :end-column 18, :arglists (quote ([input state]))}, :name animation.core/move-points, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 18, :method-params ([input state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input state]))}, run {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 271, :column 7, :end-line 271, :end-column 10, :arglists (quote ([state input screen]))}, :name animation.core/run, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 10, :method-params ([state input screen]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state input screen]))}, screen {:name animation.core/screen, :file "src/cljs/animation/core.cljs", :line 14, :column 1, :end-line 14, :end-column 12, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 14, :column 6, :end-line 14, :end-column 12}, :tag any}, frame {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 25, :column 7, :end-line 25, :end-column 12, :arglists (quote ([state i]))}, :name animation.core/frame, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 12, :method-params ([state i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state i]))}, create-frame {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 172, :column 7, :end-line 172, :end-column 19, :arglists (quote ([points]))}, :name animation.core/create-frame, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 19, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, increment-dot-group-on-shift {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 148, :column 7, :end-line 148, :end-column 35, :arglists (quote ([input state]))}, :name animation.core/increment-dot-group-on-shift, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 35, :method-params ([input state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input state]))}, move-mode? {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([state]))}, :name animation.core/move-mode?, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, step-state {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 257, :column 7, :end-line 257, :end-column 17, :arglists (quote ([input state]))}, :name animation.core/step-state, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 17, :method-params ([input state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input state]))}, set-canvas-size! {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 88, :column 7, :end-line 88, :end-column 23, :arglists (quote ([canvas {w :w, h :h}]))}, :name animation.core/set-canvas-size!, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 23, :method-params ([canvas p__13691]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([canvas {w :w, h :h}]))}, default {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 168, :column 7, :end-line 168, :end-column 14, :arglists (quote ([fn value]))}, :name animation.core/default, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 14, :method-params ([fn value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fn value]))}, merge-frames {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 213, :column 7, :end-line 213, :end-column 19, :arglists (quote ([{current-points :points} {next-points :points, :as next}]))}, :name animation.core/merge-frames, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 19, :method-params ([p__13704 p__13705]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{current-points :points} {next-points :points, :as next}]))}, add-frame-if-at-animation-end {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 180, :column 7, :end-line 180, :end-column 36, :arglists (quote ([state]))}, :name animation.core/add-frame-if-at-animation-end, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 36, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, frames {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 24, :column 6, :end-line 24, :end-column 12}, :name animation.core/frames, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 12, :method-params ([p1__13671#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists nil}, toggle-playing-on-space {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 242, :column 7, :end-line 242, :end-column 30, :arglists (quote ([input state]))}, :name animation.core/toggle-playing-on-space, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 30, :method-params ([input state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 242, :end-line 242, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input state]))}, replace-next-frame {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 187, :column 7, :end-line 187, :end-column 25, :arglists (quote ([state frame]))}, :name animation.core/replace-next-frame, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 25, :method-params ([state frame]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state frame]))}, current-frame {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 30, :column 6, :end-line 30, :end-column 19}, :name animation.core/current-frame, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 19, :method-params ([p1__13673#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists nil}, state {:name animation.core/state, :file "src/cljs/animation/core.cljs", :line 278, :column 1, :end-line 278, :end-column 11, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 278, :column 6, :end-line 278, :end-column 11}, :tag any}, cycle-selected-group-on-tab {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 237, :column 7, :end-line 237, :end-column 34, :arglists (quote ([input state]))}, :name animation.core/cycle-selected-group-on-tab, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 34, :method-params ([input state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input state]))}, canvas {:name animation.core/canvas, :file "src/cljs/animation/core.cljs", :line 13, :column 1, :end-line 13, :end-column 12, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 13, :column 6, :end-line 13, :end-column 12}, :tag any}, drag-delta {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 43, :column 7, :end-line 43, :end-column 17, :arglists (quote ([input]))}, :name animation.core/drag-delta, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 17, :method-params ([input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input]))}, clear-screen {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 50, :column 7, :end-line 50, :end-column 19, :arglists (quote ([screen window-size]))}, :name animation.core/clear-screen, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 19, :method-params ([screen window-size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([screen window-size]))}, increment-current-frame-index {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 224, :column 7, :end-line 224, :end-column 36, :arglists (quote ([state]))}, :name animation.core/increment-current-frame-index, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 36, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, playing? {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 21, :column 6, :end-line 21, :end-column 14}, :name animation.core/playing?, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 14, :method-params ([p1__13668#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists nil}, cycle-selected-group {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 229, :column 7, :end-line 229, :end-column 27, :arglists (quote ([state]))}, :name animation.core/cycle-selected-group, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 27, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, merge-points {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 198, :column 7, :end-line 198, :end-column 19, :arglists (quote ([current-points next-points]))}, :name animation.core/merge-points, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 19, :method-params ([current-points next-points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 2, :fn-var true, :arglists (quote ([current-points next-points]))}, next-frame {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 31, :column 6, :end-line 31, :end-column 16}, :name animation.core/next-frame, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 16, :method-params ([p1__13674#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists nil}, draw-ui {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 72, :column 7, :end-line 72, :end-column 14, :arglists (quote ([screen state]))}, :name animation.core/draw-ui, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 14, :method-params ([screen state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([screen state]))}, create-points {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 96, :column 7, :end-line 96, :end-column 20, :arglists (quote ([input state]))}, :name animation.core/create-points, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 20, :method-params ([input state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input state]))}, keyboard-selected-mode {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 109, :column 7, :end-line 109, :end-column 29, :arglists (quote ([input]))}, :name animation.core/keyboard-selected-mode, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 29, :method-params ([input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input]))}, fill-circle {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 58, :column 7, :end-line 58, :end-column 18, :arglists (quote ([screen center radius color]))}, :name animation.core/fill-circle, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 18, :method-params ([screen center radius color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 4, :fn-var true, :arglists (quote ([screen center radius color]))}, point-group {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 22, :column 6, :end-line 22, :end-column 17}, :name animation.core/point-group, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 17, :method-params ([p1__13669#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists nil}, at-last-frame? {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 176, :column 7, :end-line 176, :end-column 21, :arglists (quote ([state]))}, :name animation.core/at-last-frame?, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, points-selected-unselected {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 120, :column 7, :end-line 120, :end-column 33, :arglists (quote ([points selected-group]))}, :name animation.core/points-selected-unselected, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 33, :method-params ([points selected-group]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 2, :fn-var true, :arglists (quote ([points selected-group]))}, last-frame {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 26, :column 6, :end-line 26, :end-column 16}, :name animation.core/last-frame, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 16, :method-params ([p1__13672#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists nil}, selected-group {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 23, :column 6, :end-line 23, :end-column 20}, :name animation.core/selected-group, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 20, :method-params ([p1__13670#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists nil}, merge-current-frame-into-next {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 217, :column 7, :end-line 217, :end-column 36, :arglists (quote ([state]))}, :name animation.core/merge-current-frame-into-next, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 36, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, points-lookup {:protocol-inline nil, :meta {:file "/Users/maryrosecook/code/animation/src/cljs/animation/core.cljs", :line 192, :column 7, :end-line 192, :end-column 20, :arglists (quote ([points]))}, :name animation.core/points-lookup, :variadic false, :file "src/cljs/animation/core.cljs", :end-column 20, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:y :shift :space :group :selected :unselected :w :frames :mode :move :4 :next-point-id :points :playing? :h :previous :id :current :point-group :selected-group :x :draw :version :tab :current-frame-index :select}, :order [:draw :mode :move :current-frame-index :playing? :point-group :selected-group :frames :points :next-point-id :previous :current :x :y :w :h :group :id :version :select :selected :unselected :4 :shift :tab :space]}, :doc nil}